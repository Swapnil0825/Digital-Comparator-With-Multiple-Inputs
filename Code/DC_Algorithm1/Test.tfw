////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2003 Xilinx, Inc.
// All Right Reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 8.1i
//  \   \         Application : ISE
//  /   /         Filename : Test.tfw
// /___/   /\     Timestamp : Sat May 06 03:11:59 2023
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: 
//Design Name: Test
//Device: Xilinx
//
`timescale 1ns/1ps

module Test;
    reg [3:0] a = 4'b1001;
    reg [3:0] b = 4'b1000;
    reg [3:0] c = 4'b0111;
    reg [3:0] d = 4'b0110;
    wire agt;
    wire bgt;
    wire cgt;
    wire dgt;


    Algorithm1 UUT (
        .a(a),
        .b(b),
        .c(c),
        .d(d),
        .agt(agt),
        .bgt(bgt),
        .cgt(cgt),
        .dgt(dgt));

    integer TX_FILE = 0;
    integer TX_ERROR = 0;
    
    initial begin  // Open the results file...
        TX_FILE = $fopen("results.txt");
        #1000 // Final time:  1000 ns
        if (TX_ERROR == 0) begin
            $display("No errors or warnings.");
            $fdisplay(TX_FILE, "No errors or warnings.");
        end else begin
            $display("%d errors found in simulation.", TX_ERROR);
            $fdisplay(TX_FILE, "%d errors found in simulation.", TX_ERROR);
        end
        $fclose(TX_FILE);
        $stop;
    end

    initial begin
        // -------------  Current Time:  100ns
        #100;
        a = 4'b0110;
        b = 4'b1001;
        c = 4'b1000;
        d = 4'b0111;
        // -------------------------------------
        // -------------  Current Time:  200ns
        #100;
        a = 4'b0111;
        b = 4'b0110;
        c = 4'b1001;
        d = 4'b1000;
        // -------------------------------------
        // -------------  Current Time:  300ns
        #100;
        a = 4'b1000;
        b = 4'b0111;
        c = 4'b0110;
        d = 4'b1001;
        // -------------------------------------
        // -------------  Current Time:  400ns
        #100;
        a = 4'b1010;
        b = 4'b1010;
        c = 4'b1010;
        d = 4'b1010;
        // -------------------------------------
        // -------------  Current Time:  500ns
        #100;
        a = 4'b0000;
        b = 4'b0000;
        c = 4'b0000;
        d = 4'b0000;
        // -------------------------------------
        // -------------  Current Time:  1000ns
        #500;
        CHECK_agt(1'b0);
    end

    task CHECK_agt;
        input NEXT_agt;

        #0 begin
            if (NEXT_agt !== agt) begin
                $display("Error at time=%dns agt=%b, expected=%b", $time, agt, NEXT_agt);
                $fdisplay(TX_FILE, "Error at time=%dns agt=%b, expected=%b", $time, agt, NEXT_agt);
                $fflush(TX_FILE);
                TX_ERROR = TX_ERROR + 1;
            end
        end
    endtask
    task CHECK_bgt;
        input NEXT_bgt;

        #0 begin
            if (NEXT_bgt !== bgt) begin
                $display("Error at time=%dns bgt=%b, expected=%b", $time, bgt, NEXT_bgt);
                $fdisplay(TX_FILE, "Error at time=%dns bgt=%b, expected=%b", $time, bgt, NEXT_bgt);
                $fflush(TX_FILE);
                TX_ERROR = TX_ERROR + 1;
            end
        end
    endtask
    task CHECK_cgt;
        input NEXT_cgt;

        #0 begin
            if (NEXT_cgt !== cgt) begin
                $display("Error at time=%dns cgt=%b, expected=%b", $time, cgt, NEXT_cgt);
                $fdisplay(TX_FILE, "Error at time=%dns cgt=%b, expected=%b", $time, cgt, NEXT_cgt);
                $fflush(TX_FILE);
                TX_ERROR = TX_ERROR + 1;
            end
        end
    endtask
    task CHECK_dgt;
        input NEXT_dgt;

        #0 begin
            if (NEXT_dgt !== dgt) begin
                $display("Error at time=%dns dgt=%b, expected=%b", $time, dgt, NEXT_dgt);
                $fdisplay(TX_FILE, "Error at time=%dns dgt=%b, expected=%b", $time, dgt, NEXT_dgt);
                $fflush(TX_FILE);
                TX_ERROR = TX_ERROR + 1;
            end
        end
    endtask

endmodule

